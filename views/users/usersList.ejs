<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="createUserModalLabel">Create User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <form id="createUserForm" action="/users/create" method="POST">
        <div class="modal-body">
          <div class="row">
            <!-- Username -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Username</label>
              <div class="icon-field">
                <span class="icon">
                  <iconify-icon icon="f7:person"></iconify-icon>
                </span>
                <input type="text" class="form-control" name="uid" id="register_uid" placeholder="Enter Username"
                  required>
              </div>
            </div>
            <!-- Role -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Role</label>
              <select class="form-select" id="status" name="status" required>
                <option value="" disabled selected>Select Role</option>
                <option value="1">Admin</option>
                <option value="2">Player</option>
                <option value="3">Manager</option>
                <option value="4">Cashier</option>
              </select>
            </div>
          </div>

          <div class="row">
            <!-- Full Name -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Full Name</label>
              <div class="icon-field">
                <span class="icon">
                  <iconify-icon icon="mdi:account-details"></iconify-icon>
                </span>
                <input type="text" class="form-control" name="username" id="register_username"
                  placeholder="Enter Full Name" required>
              </div>
            </div>
            <!-- Email -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Email</label>
              <div class="icon-field">
                <span class="icon">
                  <iconify-icon icon="mdi:email"></iconify-icon>
                </span>
                <input type="email" class="form-control" name="email" id="register_email" placeholder="Enter Email"
                  required>
              </div>
            </div>
          </div>

          <div class="row">
            <!-- Nickname -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Nickname</label>
              <div class="icon-field">
                <span class="icon">
                  <iconify-icon icon="mdi:account-tag"></iconify-icon>
                </span>
                <input type="text" class="form-control" name="nick" id="register_nick" placeholder="Enter Nickname"
                  required>
              </div>
            </div>
            <!-- Phone -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Phone</label>
              <div class="icon-field">
                <span class="icon">
                  <iconify-icon icon="mdi:phone"></iconify-icon>
                </span>
                <input type="text" class="form-control" name="phone" id="register_phone" placeholder="Enter Phone"
                  required>
              </div>
            </div>
          </div>

          <div class="row">
            <!-- Password -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Password</label>
              <div class="icon-field">
                <span class="icon">
                  <iconify-icon icon="mdi:lock"></iconify-icon>
                </span>
                <input type="password" class="form-control" name="password" id="register_password"
                  placeholder="Enter Password" required>
              </div>
            </div>
            <!-- Confirm Password -->
            <div class="col-md-6 mb-3">
              <label class="form-label">Confirm Password</label>
              <div class="icon-field">
                <span class="icon">
                  <iconify-icon icon="mdi:lock-check"></iconify-icon>
                </span>
                <input type="password" class="form-control" name="re-password" id="register_repassword"
                  placeholder="Enter Confirm Password" required>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary btn-sm">Save User</button>
        </div>
      </form>
    </div>
  </div>
</div>

<style>
  /* highlight animation */
  .row-highlight {
    animation: highlight-pulse 2s ease-out;
    background-color: #fff9c4;
  }

  @keyframes highlight-pulse {
    0% {
      background-color: #fff9c4;
    }

    50% {
      background-color: transparent;
    }

    100% {
      background-color: #fff9c4;
    }
  }

  /* Premium pill badge */
.status-badge {
  display: inline-flex !important;
  align-items: center;
  justify-content: center;
  width: 16px;
  height: 16px;
  border-radius: 50%;
}

/* Dot element â€“ default walang animation */
.status-badge .dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: currentColor;
}

/* Online badge: light green background, pulsing green dot */
.status-badge-online {
  background-color: #e1f9ea !important;
  color: #00bb3b !important;
}
.status-badge-online .dot {
  animation: pulse 1.5s ease-in-out infinite;
}

/* Offline badge: light red background, static red dot */
.status-badge-offline {
  background-color: #fde1e1 !important;
  color: #c70000 !important;
}
.status-badge-offline .dot {
  /* walang animation */
  animation: none;
}

/* Pulse keyframes */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.4);
    opacity: 0.7;
  }
}

</style>

<div class="card h-100 p-0 radius-12">
  <div
    class="card-header border-bottom bg-base py-16 px-24 d-flex align-items-center flex-wrap gap-3 justify-content-between">
    <div class="d-flex align-items-center flex-wrap gap-3">
  <span class="text-md fw-medium text-secondary-light mb-0">Show</span>
  <select id="perPageSelect" class="form-select form-select-sm w-auto ps-12 py-6 radius-12 h-40-px">
    <option value="10" selected>10</option>
    <option value="25">25</option>
    <option value="50">50</option>
    <option value="100">100</option>
  </select>

      <input id="searchInput" type="text" class="form-control bg-base h-40-px w-auto" placeholder="Search" />
      <div class="ms-4">
        <strong>Current Online Users: <span id="onlineCount">0</span></strong>
      </div>
    </div>

    <!-- <button type="button"
            class="btn btn-primary text-sm btn-sm px-12 py-12 radius-8 d-flex align-items-center gap-2"
            data-bs-toggle="modal" data-bs-target="#createUserModal">
            <iconify-icon icon="ic:baseline-plus" class="icon text-xl line-height-1"></iconify-icon>
            Create User
        </button> -->
  </div>

  <div class="card-body p-24">
    <div class="table-responsive scroll-sm">
      <table class="table bordered-table table-striped mb-0" id="userTable" data-page-length='10'>
        <thead>
          <tr>
            <th>
              <div class="form-check style-check d-flex align-items-center">
                <input class="form-check-input" type="checkbox">
              </div>
            </th>
            <th>Join Date</th>
            <th>Name</th>
            <th>Username</th>
            <th>Role</th>
            <th>Phone</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>
</div>






<!-- Load our API client as a module -->
<script type="module">
  import { adminUser } from '/js/apiAdmin.js';

  const levelMap = {
    1: 'Admin',
    2: 'Player',
    3: 'Manager',
    4: 'Cashier'
  };

  $(document).ready(async function () {
    // 0) Basahin ang highlightUid mula sa URL
    const params = new URLSearchParams(window.location.search);
    let highlightUid = params.get('highlightUid');

    // 1) I-prepare si `table` at `onlineUids` bago sila gamitin
    let table;
    let onlineUids = [];

    // 2) Socket.IO client para sa online status
    const socket = io(`http://gs.ev0-games.com:4000`, {
      transports: ['websocket'],
      withCredentials: true
    });
    socket.on('connect', () =>
      console.log('âœ… Admin client connected (socket.id):', socket.id)
    );
    socket.on('connection-established', data =>
      console.log('ðŸ”Œ Server confirmed connection, your socketId =', data.socketId)
    );
    // kapag may login o logout event, reload online list
    socket.on('user-login', () => reloadOnline());
    socket.on('user-logout', () => reloadOnline());

    // 3) Function to fetch current online UIDs
    async function reloadOnline() {
      try {
        const online = await adminUser.getOnlineUsers();
        onlineUids = online.map(u => u.uid);
      } catch (err) {
        console.error('Failed to reload online users', err);
        onlineUids = [];
      }
      // **Update ang count sa UI**
      const cntEl = document.getElementById('onlineCount');
      if (cntEl) cntEl.textContent = onlineUids.length;

      // â†’ I-reload ang DataTable badges kung naka-init na siya
      if (table) {
        table.ajax.reload(null, false); // maintain current page
      }
    }

    // 4) Initial load ng online list bago buuin ang DataTable
    await reloadOnline();

    // 5) Ngayon i-init ang DataTable at i-assign sa variable na `table`
    table = $('#userTable').DataTable({
      pageLength: 10,
      lengthChange: false,
      searching: true,
      info: true,
      responsive: true,
      ordering: false,
      processing: true,
      serverSide: true,
      dom: '<"d-flex align-items-center justify-content-between mb-3"<"d-flex align-items-center gap-2"l>>t<"d-flex align-items-center justify-content-between mt-3"ip>',
      language: { info: "Showing _START_ to _END_ of _TOTAL_ entries" },
      ajax: async (dtParams, callback) => {
        try {
          const page = Math.floor(dtParams.start / dtParams.length) + 1;
          const res = await adminUser.getList({
            page,
            per: dtParams.length,
            search: dtParams.search.value || '',
            state: '10,1'
          });

          callback({
            draw: dtParams.draw,
            recordsTotal: res.total,
            recordsFiltered: res.total,
            data: res.rows.map(u => {
              // Name cell with real-time badge
              const isOnline = onlineUids.includes(u.uid);
              const nameCell = `
                ${u.nick}
                <span class="ms-2 d-inline-flex align-items-center">
  <span class="status-badge ${isOnline ? 'status-badge-online' : 'status-badge-offline'}">
    <span class="dot"></span>
  </span>
</span>
              `;

              return [
                `<div class="form-check style-check d-flex align-items-center">
                   <input class="form-check-input radius-4 border input-form-dark" type="checkbox">
                 </div>`,
                new Date(u.created_at).toLocaleDateString(),
                nameCell,
                u.uid || '',
                levelMap[u.level] || '',
                u.phone || '',
                `<span class="${u.state === 1 ? 'bg-success-focus text-success-main'
                  : u.state === 11 ? 'bg-danger-focus text-danger-main'
                    : 'bg-warning-focus text-warning-main'
                } px-24 py-4 rounded-pill fw-medium text-sm">
                   ${u.state === 1 ? 'Active' : u.state === 11 ? 'Rejected' : 'Pending'}
                 </span>`,
                u.state === 1
                  ? `<a href="/users/view-profile?idx=${u.idx}" target="_blank"
                         class="w-32-px h-32-px bg-success-focus text-success-main rounded-circle d-inline-flex align-items-center justify-content-center"
                         title="View Profile">
                         <iconify-icon icon="lucide:edit"></iconify-icon>
                     </a>
                     <a href="javascript:void(0)"
                         class="btn-delete w-32-px h-32-px bg-danger-focus text-danger-main rounded-circle d-inline-flex align-items-center justify-content-center"
                         data-idx="${u.idx}"
                         title="Delete User">
                       <iconify-icon icon="mingcute:delete-2-line"></iconify-icon>
                     </a>`
                  : `<a href="javascript:void(0)"
                         class="btn-approve w-32-px h-32-px bg-primary-light text-primary-600 rounded-circle d-inline-flex align-items-center justify-content-center"
                         data-uid="${u.uid}"
                         title="Approve User">
                       <iconify-icon icon="ic:baseline-check"></iconify-icon>
                     </a>
                     <a href="javascript:void(0)"
                         class="btn-ban w-32-px h-32-px bg-danger-focus text-danger-main rounded-circle d-inline-flex align-items-center justify-content-center"
                         data-uid="${u.uid}"
                         title="Reject User">
                       <iconify-icon icon="ic:baseline-close"></iconify-icon>
                     </a>`
              ];
            })
          });
        } catch (err) {
          console.error(err);
        }
      }
    });

    // 6) Pagkatapos mag-draw, hanapin at i-highlight ang matching UID row (once)
    table.on('draw', () => {
      if (!highlightUid) return;
      table.rows().every(function () {
        const data = this.data();
        if (data[3] === highlightUid) {
          const rowNode = this.node();
          $(rowNode).addClass('row-highlight');
          rowNode.scrollIntoView({ behavior: 'smooth', block: 'center' });
          return false;
        }
      });
      highlightUid = null;
    });

    // 7) Bind perPage & search controls
    $('#perPageSelect').on('change', function () {
      table.page.len(+$(this).val()).draw();
    });
    $('#searchInput').on('keyup', function () {
      table.search($(this).val()).draw();
    });

    // 8) Approve / Reject / Delete buttonsâ€¦
    $('#userTable tbody')
      .on('click', '.btn-approve', async function () {
        const uid = $(this).data('uid');
        const res = await Swal.fire({
          title: 'Are you sure?', text: "You want to approve this user?",
          icon: 'question', showCancelButton: true,
          confirmButtonText: 'Yes, approve it!'
        });
        if (res.isConfirmed) {
          await adminUser.approve(uid, { act: 'ok' });
          table.ajax.reload(null, false);
          Swal.fire('Approved!', 'User has been approved.', 'success');
        }
      })
      .on('click', '.btn-ban', async function () {
        const uid = $(this).data('uid');
        const res = await Swal.fire({
          title: 'Are you sure?', text: "You want to reject this user?",
          icon: 'warning', showCancelButton: true,
          confirmButtonText: 'Yes, reject it!'
        });
        if (res.isConfirmed) {
          await adminUser.approve(uid, { act: 'no' });
          table.ajax.reload(null, false);
          Swal.fire('Rejected!', 'User has been rejected.', 'success');
        }
      })
      .on('click', '.btn-delete', async function () {
        const idx = $(this).data('idx');
        const res = await Swal.fire({
          title: 'Are you sure?', text: `Delete user idx: ${idx}?`,
          icon: 'warning', showCancelButton: true,
          confirmButtonText: 'Yes, delete it!'
        });
        if (res.isConfirmed) {
          await adminUser.delete(idx);
          table.ajax.reload(null, false);
          Swal.fire('Deleted!', 'User has been marked as deleted.', 'success');
        }
      });

    // 9) Reset create user modal
    $('#createUserModal').on('show.bs.modal', function () {
      $('#createUserForm')[0].reset();
      $('#createUserModalLabel').text('Create User');
      $('#createUserForm').attr('action', '/users/create');
      $('#register_uid').prop('readonly', false);
    });
  });
</script>